# Ahora graficaremos nuestra serie
autoplot(NGSP, xlab = "Año", ylab = "Precio", title = "Precios del gas natural en EUA de 1997 a 2020")
# A simple vista, parece que tenemos un proceso no estacionario y sin ninguna tendencia estacional.
# Para veirificarlo, usamos los siguientes comandos:
ndiffs(NGSP)
nsdiffs(NGSP)
# A simple vista, parece que tenemos un proceso no estacionario y sin ninguna tendencia estacional.
# Para veirificarlo, usamos los siguientes comandos:
adf.test(NGSP)
pp.test(NGSP)
H <- 5
N <- length(NGSP)
n <- 9
R <- (N-n)/H
lambdas <- c(-9,-8.5,-8,-7.5,-7,-6.5,-6,5.5)
lambdas <- seq(from=-8.5,to=8.5,by =0.1)
breaks <- c()
breaks[1] <- 0
for(i in 1:H){
breaks[i+1] <- R*i
}
temp <- as.vector(t(NGSP))
temp <- head(temp,length(temp)-n)
matrix <- matrix(rep(0), nrow = H, ncol = length(lambdas))
S <- c()
Z <- c()
for(i in 1:H){
a <- breaks[i]+1
b <- breaks[i+1]
temp_2 <- temp[a:b]
Z[i] <- sum(temp_2)/R
S[i] <- sqrt((sum(temp_2-Z[i])^(2))/(R-1))
}
for(i in 1:H){
for(j in 1:length(lambdas)){
matrix[i,j] <- (S[i])/(Z[i]^(1-lambdas[j]))
}
}
CC <- c()
M_lambda <- c()
de_lambda <- c()
for(i in 1:length(lambdas)){
M_lambda[i] <- sum(matrix[,i])/H
de_lambda[i] <- sqrt(sum(((matrix[,i])-(M_lambda[i]))^2)/(H-1))
CC[i] <- de_lambda[i]/M_lambda[i]
}
CC <- rbind(lambdas,CC)
lambda <- CC[1,which.min(CC[2,])]
lambda
NGSPT <- NGSP^lambda
autoplot(NGSPT)
adf.test(NGSPT)
pp.test(NGSP)
# Graficamos por año con el objetivo de observar si hay estacionalidad
ggseasonplot(NGSP, xlab = "Mes",
main = "",
title = "asdfasdf",
season.labels = NULL,
year.labels = FALSE,
year.labels.left = FALSE,
col = NULL,
continuous = FALSE,
polar = FALSE,
)
ggseasonplot(NGSP, xlab = "Mes",
main = "",
title = "asdfasdf",
season.labels = NULL,
year.labels = FALSE,
year.labels.left = FALSE,
col = NULL,
continuous = FALSE,
polar = FALSE,
)
ggseasonplot(NGSP_BC, xlab = "Mes",
main = "",
title = "asdfasdf",
season.labels = NULL,
year.labels = FALSE,
year.labels.left = FALSE,
col = NULL,
continuous = FALSE,
polar = FALSE,
)
lambda <- BoxCox.lambda(NGSP)
NGSP_BC <- BoxCox(NGSP, lambda)
autoplot(NGSP_BC, xlab="Tiempo", ylab="Precio")
adf.test(NGSP_BC)
pp.test(NGSP_BC)
#acf(NGSP)
acf(NGSP_BC)
pacf(NGSP_BC)
pacf(NGSP)
#acf(NGSP)
acf(NGSP)
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.5), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
ar1<- arima.sim(list(order=c(1,1,2), ar=0.63371, ma=c(0.40338,0.08182)), n=500)
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.63371, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.63371, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.63371, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.63371, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,1), ar=0.63371, ma=0.40338), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,1), ar=0.63371, ma=0.40338), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,1), ar=0.63371, ma=0.40338), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,1), ar=0.63371, ma=0.40338), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,1), ar=0.63371, ma=0.40338), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,1), ar=0.63371, ma=0.40338), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,1), ar=0.63371, ma=0.40338), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,1), ar=0.63371, ma=0.40338), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,1), ar=0.63371, ma=0.40338), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.63371, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.63371, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.63371, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.63371, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.63371, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.63371, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.1, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.1, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
acf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FAC")
pacf(NGSP_BC, main = "Precios de gas natural (Box-Cox)", ylab="FACP")
ar1<- arima.sim(list(order=c(1,1,2), ar=0.1, ma=c(0.40338,0.08182)), n=500)
acf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FAC")
pacf(ar1, main = expression(paste("Proceso AR(1) con ",phi,"< 0.1")), ylab="FACP")
par(mfrow=c(1,1))
# Después de aplicar la transformación estabilizadora de varianza, checamos si ya es estacionario
adf.test(NGSP_BC)
pp.test(NGSP_BC)
backup <- NGSP
NGSP <- NGSP_BC
# Ahora utilizaremos el siguiente comando para ver cuántas
# diferencias son necesarias para volver el proceso a uno estacionario.
ndiffs(NGSP)
## Estimación de parámetros  ###################################################################
# Para un I(1)
model <- Arima(NGSP, order=c(0,1,0)) # Este pasó :D
residuals <- residuals(model)
checkresiduals(model)
################# Análisis de residuos ##################
#Residuales
res_autoarima <- residuals(model)
checkresiduals(model)
#########################################################################################################
# Supuesto 1 (media cero)
#########################################################################################################
# Debemos verificar que el valor absoluto del cociente sea menor que dos para decir que no hay evidencia de que
# la media del proceso sea diferente de 0.
media <- mean(residuals)
media
desv <- sqrt(var(residuals))
desv
N <- length(residuals)
p <- 0
d <- 1
q <- 0
cociente <- (sqrt(N-d-p)) * (media/desv)
abs(cociente)
# Supuesto 3 (residuos independientes)
# Prueba de Ljung-Box
checkresiduals(model)
Box.test(residuals, lag = 24, type = c("Ljung-Box"))
?Box.test()
Box.test(residuals, type = c("Ljung-Box"))
LI2 <- -2*desv
LS2 <- 2*desv
desv <- sqrt(var(residuals))
desv
LEFT <- -2*desv
RIGHT <- 2*desv
JIJI <- length(residuals[residuals>RIGHT]) + length(residuals[residuals<LEFT])
JIJI
JIJI/length(residuals)
# Se esperaba 5% y es lo que pasó lol
breaks <- seq(from = -10, to = 10, by = 0.5)
hist(residuals, breaks = breaks)
qqnorm(residuals)
qqline(residuals)
checkresiduals(model)
shapiro.test(residuals)
lillie.test(x = residuals)
?lillie.test()
